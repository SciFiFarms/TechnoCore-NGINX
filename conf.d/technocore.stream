upstream mqtt_cluster {
    server mqtt:1883;
}

server {
    listen 1883; # MQTT port
    proxy_pass mqtt_cluster;

    access_log /var/log/nginx/mqtt_access.log main;
    error_log  /var/log/nginx/mqtt_error.log info; # nginScript debug logging
}

# TODO: Implement secure MQTT as well as other sites. Below is a starting point.
#server {
#    listen 8883 ssl; # MQTT secure port
#    #preread_buffer_size 1k;
#    #js_preread getClientId;

#    ssl_certificate /run/secrets/cert;
#    ssl_certificate_key /run/secrets/key;
#    ssl_ciphers         HIGH:!aNULL:!MD5;
#    ssl_session_cache   shared:SSL:128m; # 128MB ~= 500k sessions
#    ssl_session_tickets on;
#    ssl_session_timeout 8h;

#    location * {
#        proxy_pass mqtt://mqtt:8883;
#        proxy_connect_timeout 1s;

#    }

#    #access_log /var/log/nginx/mqtt_access.log debug;
#    error_log  /var/log/nginx/mqtt_error.log info; # nginScript debug logging
#}

#server {
#    listen 80;
#    server_name mqtt.scifi.farm,spencer-laptop;
#
#    location /.well-known/acme-challenge/ {
#        root /var/www/certbot;
#    }
#
#    location / {
#        return 301 https://$host$request_uri;
#    }
#}

#server {
#    listen 443 ssl;
#    server_name mqtt.scifi.farm,spencer-laptop;
#
#    ssl_certificate /run/secrets/cert;
#    ssl_certificate_key /run/secrets/key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#    location / {
#        proxy_pass ;
#    }